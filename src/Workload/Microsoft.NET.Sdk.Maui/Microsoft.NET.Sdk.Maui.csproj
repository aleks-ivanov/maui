<Project Sdk="Microsoft.Build.NoTargets">

  <Import Project="../Shared/Common.targets" />

  <PropertyGroup>
    <PackageId>$(PackageId).Manifest-$(DotNetPreviewVersionBand)</PackageId>
    <Description>.NET MAUI workload manifest</Description>
  </PropertyGroup>

  <Import Project="$(MauiRootDirectory)eng/ReplaceText.targets" />

  <ItemGroup>
    <None Update="WorkloadManifest.targets" CopyToOutputDirectory="PreserveNewest" Pack="true" PackagePath="data" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../Microsoft.Maui.*/*.csproj" />
  </ItemGroup>

  <Target Name="_GenerateWorkloadManifest" BeforeTargets="Build;AssignTargetPaths" DependsOnTargets="SetVersions" Inputs="$(MSBuildProjectFile);WorkloadManifest.in.json" Outputs="$(IntermediateOutputPath)WorkloadManifest.json">
    <ItemGroup>
      <_VersionsToReplace Include="MicrosoftAspNetCoreAuthorizationPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreComponentsAnalyzersPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreComponentsFormsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreComponentsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreComponentsWebPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreComponentsWebViewPackageVersion" />
      <_VersionsToReplace Include="MicrosoftAspNetCoreMetadataPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationAbstractionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationBinderPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationCommandLinePackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationEnvironmentVariablesPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationFileExtensionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationJsonPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsConfigurationUserSecretsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsDependencyInjectionAbstractionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsDependencyInjectionPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsFileProvidersAbstractionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsFileProvidersCompositePackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsFileProvidersEmbeddedPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsFileProvidersPhysicalPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsFileSystemGlobbingPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsHostingAbstractionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsHostingPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingAbstractionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingConfigurationPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingConsolePackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingDebugPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingEventLogPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingEventSourcePackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsLoggingPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsOptionsConfigurationExtensionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsOptionsPackageVersion" />
      <_VersionsToReplace Include="MicrosoftExtensionsPrimitivesPackageVersion" />
      <_VersionsToReplace Include="MicrosoftJSInteropPackageVersion" />
      <_VersionsToReplace Include="MicrosoftMauiGraphicsVersion" />
      <_VersionsToReplace Include="SystemDiagnosticsDiagnosticSourcePackageVersion" />
      <_VersionsToReplace Include="SystemDiagnosticsEventLogPackageVersion" />
      <_VersionsToReplace Include="SystemIOPipelinesPackageVersion" />
      <_VersionsToReplace Include="SystemRuntimeCompilerServicesUnsafePackageVersion" />
      <_VersionsToReplace Include="SystemTextEncodingsWebPackageVersion" />
      <_VersionsToReplace Include="SystemTextJsonPackageVersion" />
      <_VersionsToReplace Update="@(_VersionsToReplace)" PropertyName="%(Identity)" />
      <_VersionsToReplace Include="MicrosoftMauiGraphicsWin2DWinUIDesktopPackageVersion" PropertyName="MicrosoftMauiGraphicsVersion" />
    </ItemGroup>
    <ReplaceText
        Input="WorkloadManifest.in.json"
        Output="$(IntermediateOutputPath)WorkloadManifest.json"
        OldValue="@VERSION@"
        NewValue="$(PackageReferenceVersion)"
    />
    <ReplaceText
        Input="$(IntermediateOutputPath)WorkloadManifest.json"
        Output="$(IntermediateOutputPath)WorkloadManifest.json"
        OldValue="@%(_VersionsToReplace.Identity)@"
        NewValue="$(%(_VersionsToReplace.PropertyName))"
    />
    <ItemGroup>
      <None Include="$(IntermediateOutputPath)WorkloadManifest.json" Link="WorkloadManifest.json" CopyToOutputDirectory="PreserveNewest" Pack="true" PackagePath="data" Visible="false" />
      <FileWrites Include="$(IntermediateOutputPath)WorkloadManifest.json" />
    </ItemGroup>
  </Target>

  <Target Name="_GenerateVSWorkloadProps" AfterTargets="Build" Inputs="$(MSBuildProjectFile);$(MauiRootDirectory)eng/automation/vs-workload.template.props" Outputs="$(PackageOutputPath)/vs-workload.temp.props;$(PackageOutputPath)/vs-workload.props">
    <ReplaceText Input="$(MauiRootDirectory)eng/automation/vs-workload.template.props" Output="$(PackageOutputPath)/vs-workload.temp.props" OldValue="@PACK_VERSION_LONG@" NewValue="$(PackageReferenceVersion)" />
    <ReplaceText Input="$(PackageOutputPath)/vs-workload.temp.props" Output="$(PackageOutputPath)/vs-workload.props" OldValue="@VS_COMPONENT_VERSION@" NewValue="$(VSComponentVersion)" />
    <ItemGroup>
      <FileWrites Include="$(PackageOutputPath)/vs-workload.props" />
    </ItemGroup>
  </Target>

  <Target Name="_CopyManifest" AfterTargets="Build">
    <ItemGroup>
      <_Files Include="$(OutputPath)WorkloadManifest.*" />
    </ItemGroup>
    <Copy SourceFiles="@(_Files)" DestinationFolder="$(DotNetSdkManifestsDirectory)$(MSBuildProjectName.ToLowerInvariant())" />
  </Target>

</Project>